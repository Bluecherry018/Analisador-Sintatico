# Generated from LALexer.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,48,456,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,
        1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,
        1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,
        10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,12,1,
        12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,
        13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
        16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,
        17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,
        19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,
        21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,
        23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,
        24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,
        25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,
        27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,
        28,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,
        30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,
        32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,
        33,1,33,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,37,1,37,5,
        37,378,8,37,10,37,12,37,381,9,37,1,37,1,37,1,37,1,37,1,38,1,38,1,
        39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,3,
        39,402,8,39,1,40,1,40,1,41,1,41,1,41,1,41,3,41,410,8,41,1,42,1,42,
        5,42,414,8,42,10,42,12,42,417,9,42,1,42,1,42,1,43,4,43,422,8,43,
        11,43,12,43,423,1,43,1,43,4,43,428,8,43,11,43,12,43,429,1,44,4,44,
        433,8,44,11,44,12,44,434,1,45,1,45,5,45,439,8,45,10,45,12,45,442,
        9,45,1,46,4,46,445,8,46,11,46,12,46,446,1,46,1,46,1,47,1,47,1,48,
        1,48,1,48,1,48,0,0,49,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
        10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,
        21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,
        32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,
        43,87,44,89,45,91,46,93,47,95,0,97,48,1,0,9,2,0,10,10,13,13,4,0,
        37,37,42,43,45,45,47,47,2,0,38,38,94,94,6,0,40,41,44,44,47,47,58,
        59,91,91,93,93,3,0,10,10,13,13,34,34,3,0,65,90,95,95,97,122,4,0,
        48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,1,0,48,57,469,0,1,
        1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
        0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
        0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,
        0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,
        0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,
        0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,
        0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,
        0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,
        0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,
        0,0,0,93,1,0,0,0,0,97,1,0,0,0,1,99,1,0,0,0,3,107,1,0,0,0,5,112,1,
        0,0,0,7,120,1,0,0,0,9,128,1,0,0,0,11,133,1,0,0,0,13,141,1,0,0,0,
        15,144,1,0,0,0,17,150,1,0,0,0,19,156,1,0,0,0,21,163,1,0,0,0,23,177,
        1,0,0,0,25,181,1,0,0,0,27,191,1,0,0,0,29,196,1,0,0,0,31,203,1,0,
        0,0,33,212,1,0,0,0,35,225,1,0,0,0,37,238,1,0,0,0,39,242,1,0,0,0,
        41,248,1,0,0,0,43,257,1,0,0,0,45,268,1,0,0,0,47,273,1,0,0,0,49,277,
        1,0,0,0,51,290,1,0,0,0,53,307,1,0,0,0,55,312,1,0,0,0,57,321,1,0,
        0,0,59,326,1,0,0,0,61,331,1,0,0,0,63,340,1,0,0,0,65,347,1,0,0,0,
        67,358,1,0,0,0,69,366,1,0,0,0,71,368,1,0,0,0,73,371,1,0,0,0,75,375,
        1,0,0,0,77,386,1,0,0,0,79,401,1,0,0,0,81,403,1,0,0,0,83,409,1,0,
        0,0,85,411,1,0,0,0,87,421,1,0,0,0,89,432,1,0,0,0,91,436,1,0,0,0,
        93,444,1,0,0,0,95,450,1,0,0,0,97,452,1,0,0,0,99,100,5,100,0,0,100,
        101,5,101,0,0,101,102,5,99,0,0,102,103,5,108,0,0,103,104,5,97,0,
        0,104,105,5,114,0,0,105,106,5,101,0,0,106,2,1,0,0,0,107,108,5,114,
        0,0,108,109,5,101,0,0,109,110,5,97,0,0,110,111,5,108,0,0,111,4,1,
        0,0,0,112,113,5,105,0,0,113,114,5,110,0,0,114,115,5,116,0,0,115,
        116,5,101,0,0,116,117,5,105,0,0,117,118,5,114,0,0,118,119,5,111,
        0,0,119,6,1,0,0,0,120,121,5,108,0,0,121,122,5,105,0,0,122,123,5,
        116,0,0,123,124,5,101,0,0,124,125,5,114,0,0,125,126,5,97,0,0,126,
        127,5,108,0,0,127,8,1,0,0,0,128,129,5,108,0,0,129,130,5,101,0,0,
        130,131,5,105,0,0,131,132,5,97,0,0,132,10,1,0,0,0,133,134,5,101,
        0,0,134,135,5,115,0,0,135,136,5,99,0,0,136,137,5,114,0,0,137,138,
        5,101,0,0,138,139,5,118,0,0,139,140,5,97,0,0,140,12,1,0,0,0,141,
        142,5,115,0,0,142,143,5,101,0,0,143,14,1,0,0,0,144,145,5,101,0,0,
        145,146,5,110,0,0,146,147,5,116,0,0,147,148,5,97,0,0,148,149,5,111,
        0,0,149,16,1,0,0,0,150,151,5,115,0,0,151,152,5,101,0,0,152,153,5,
        110,0,0,153,154,5,97,0,0,154,155,5,111,0,0,155,18,1,0,0,0,156,157,
        5,102,0,0,157,158,5,105,0,0,158,159,5,109,0,0,159,160,5,95,0,0,160,
        161,5,115,0,0,161,162,5,101,0,0,162,20,1,0,0,0,163,164,5,102,0,0,
        164,165,5,105,0,0,165,166,5,109,0,0,166,167,5,95,0,0,167,168,5,97,
        0,0,168,169,5,108,0,0,169,170,5,103,0,0,170,171,5,111,0,0,171,172,
        5,114,0,0,172,173,5,105,0,0,173,174,5,116,0,0,174,175,5,109,0,0,
        175,176,5,111,0,0,176,22,1,0,0,0,177,178,5,102,0,0,178,179,5,105,
        0,0,179,180,5,109,0,0,180,24,1,0,0,0,181,182,5,99,0,0,182,183,5,
        111,0,0,183,184,5,110,0,0,184,185,5,115,0,0,185,186,5,116,0,0,186,
        187,5,97,0,0,187,188,5,110,0,0,188,189,5,116,0,0,189,190,5,101,0,
        0,190,26,1,0,0,0,191,192,5,116,0,0,192,193,5,105,0,0,193,194,5,112,
        0,0,194,195,5,111,0,0,195,28,1,0,0,0,196,197,5,108,0,0,197,198,5,
        111,0,0,198,199,5,103,0,0,199,200,5,105,0,0,200,201,5,99,0,0,201,
        202,5,111,0,0,202,30,1,0,0,0,203,204,5,114,0,0,204,205,5,101,0,0,
        205,206,5,103,0,0,206,207,5,105,0,0,207,208,5,115,0,0,208,209,5,
        116,0,0,209,210,5,114,0,0,210,211,5,111,0,0,211,32,1,0,0,0,212,213,
        5,102,0,0,213,214,5,105,0,0,214,215,5,109,0,0,215,216,5,95,0,0,216,
        217,5,114,0,0,217,218,5,101,0,0,218,219,5,103,0,0,219,220,5,105,
        0,0,220,221,5,115,0,0,221,222,5,116,0,0,222,223,5,114,0,0,223,224,
        5,111,0,0,224,34,1,0,0,0,225,226,5,112,0,0,226,227,5,114,0,0,227,
        228,5,111,0,0,228,229,5,99,0,0,229,230,5,101,0,0,230,231,5,100,0,
        0,231,232,5,105,0,0,232,233,5,109,0,0,233,234,5,101,0,0,234,235,
        5,110,0,0,235,236,5,116,0,0,236,237,5,111,0,0,237,36,1,0,0,0,238,
        239,5,118,0,0,239,240,5,97,0,0,240,241,5,114,0,0,241,38,1,0,0,0,
        242,243,5,102,0,0,243,244,5,97,0,0,244,245,5,108,0,0,245,246,5,115,
        0,0,246,247,5,111,0,0,247,40,1,0,0,0,248,249,5,101,0,0,249,250,5,
        110,0,0,250,251,5,113,0,0,251,252,5,117,0,0,252,253,5,97,0,0,253,
        254,5,110,0,0,254,255,5,116,0,0,255,256,5,111,0,0,256,42,1,0,0,0,
        257,258,5,118,0,0,258,259,5,101,0,0,259,260,5,114,0,0,260,261,5,
        100,0,0,261,262,5,97,0,0,262,263,5,100,0,0,263,264,5,101,0,0,264,
        265,5,105,0,0,265,266,5,114,0,0,266,267,5,111,0,0,267,44,1,0,0,0,
        268,269,5,102,0,0,269,270,5,97,0,0,270,271,5,99,0,0,271,272,5,97,
        0,0,272,46,1,0,0,0,273,274,5,97,0,0,274,275,5,116,0,0,275,276,5,
        101,0,0,276,48,1,0,0,0,277,278,5,102,0,0,278,279,5,105,0,0,279,280,
        5,109,0,0,280,281,5,95,0,0,281,282,5,101,0,0,282,283,5,110,0,0,283,
        284,5,113,0,0,284,285,5,117,0,0,285,286,5,97,0,0,286,287,5,110,0,
        0,287,288,5,116,0,0,288,289,5,111,0,0,289,50,1,0,0,0,290,291,5,102,
        0,0,291,292,5,105,0,0,292,293,5,109,0,0,293,294,5,95,0,0,294,295,
        5,112,0,0,295,296,5,114,0,0,296,297,5,111,0,0,297,298,5,99,0,0,298,
        299,5,101,0,0,299,300,5,100,0,0,300,301,5,105,0,0,301,302,5,109,
        0,0,302,303,5,101,0,0,303,304,5,110,0,0,304,305,5,116,0,0,305,306,
        5,111,0,0,306,52,1,0,0,0,307,308,5,99,0,0,308,309,5,97,0,0,309,310,
        5,115,0,0,310,311,5,111,0,0,311,54,1,0,0,0,312,313,5,102,0,0,313,
        314,5,105,0,0,314,315,5,109,0,0,315,316,5,95,0,0,316,317,5,99,0,
        0,317,318,5,97,0,0,318,319,5,115,0,0,319,320,5,111,0,0,320,56,1,
        0,0,0,321,322,5,115,0,0,322,323,5,101,0,0,323,324,5,106,0,0,324,
        325,5,97,0,0,325,58,1,0,0,0,326,327,5,112,0,0,327,328,5,97,0,0,328,
        329,5,114,0,0,329,330,5,97,0,0,330,60,1,0,0,0,331,332,5,102,0,0,
        332,333,5,105,0,0,333,334,5,109,0,0,334,335,5,95,0,0,335,336,5,112,
        0,0,336,337,5,97,0,0,337,338,5,114,0,0,338,339,5,97,0,0,339,62,1,
        0,0,0,340,341,5,102,0,0,341,342,5,117,0,0,342,343,5,110,0,0,343,
        344,5,99,0,0,344,345,5,97,0,0,345,346,5,111,0,0,346,64,1,0,0,0,347,
        348,5,102,0,0,348,349,5,105,0,0,349,350,5,109,0,0,350,351,5,95,0,
        0,351,352,5,102,0,0,352,353,5,117,0,0,353,354,5,110,0,0,354,355,
        5,99,0,0,355,356,5,97,0,0,356,357,5,111,0,0,357,66,1,0,0,0,358,359,
        5,114,0,0,359,360,5,101,0,0,360,361,5,116,0,0,361,362,5,111,0,0,
        362,363,5,114,0,0,363,364,5,110,0,0,364,365,5,101,0,0,365,68,1,0,
        0,0,366,367,5,101,0,0,367,70,1,0,0,0,368,369,5,111,0,0,369,370,5,
        117,0,0,370,72,1,0,0,0,371,372,5,110,0,0,372,373,5,97,0,0,373,374,
        5,111,0,0,374,74,1,0,0,0,375,379,5,123,0,0,376,378,8,0,0,0,377,376,
        1,0,0,0,378,381,1,0,0,0,379,377,1,0,0,0,379,380,1,0,0,0,380,382,
        1,0,0,0,381,379,1,0,0,0,382,383,5,125,0,0,383,384,1,0,0,0,384,385,
        6,37,0,0,385,76,1,0,0,0,386,387,7,1,0,0,387,78,1,0,0,0,388,402,2,
        60,62,0,389,390,5,60,0,0,390,402,5,45,0,0,391,392,5,60,0,0,392,402,
        5,62,0,0,393,394,5,33,0,0,394,402,5,61,0,0,395,396,5,60,0,0,396,
        402,5,61,0,0,397,398,5,62,0,0,398,402,5,61,0,0,399,400,5,61,0,0,
        400,402,5,61,0,0,401,388,1,0,0,0,401,389,1,0,0,0,401,391,1,0,0,0,
        401,393,1,0,0,0,401,395,1,0,0,0,401,397,1,0,0,0,401,399,1,0,0,0,
        402,80,1,0,0,0,403,404,7,2,0,0,404,82,1,0,0,0,405,410,7,3,0,0,406,
        407,5,46,0,0,407,410,5,46,0,0,408,410,7,2,0,0,409,405,1,0,0,0,409,
        406,1,0,0,0,409,408,1,0,0,0,410,84,1,0,0,0,411,415,5,34,0,0,412,
        414,8,4,0,0,413,412,1,0,0,0,414,417,1,0,0,0,415,413,1,0,0,0,415,
        416,1,0,0,0,416,418,1,0,0,0,417,415,1,0,0,0,418,419,5,34,0,0,419,
        86,1,0,0,0,420,422,3,95,47,0,421,420,1,0,0,0,422,423,1,0,0,0,423,
        421,1,0,0,0,423,424,1,0,0,0,424,425,1,0,0,0,425,427,5,46,0,0,426,
        428,3,95,47,0,427,426,1,0,0,0,428,429,1,0,0,0,429,427,1,0,0,0,429,
        430,1,0,0,0,430,88,1,0,0,0,431,433,3,95,47,0,432,431,1,0,0,0,433,
        434,1,0,0,0,434,432,1,0,0,0,434,435,1,0,0,0,435,90,1,0,0,0,436,440,
        7,5,0,0,437,439,7,6,0,0,438,437,1,0,0,0,439,442,1,0,0,0,440,438,
        1,0,0,0,440,441,1,0,0,0,441,92,1,0,0,0,442,440,1,0,0,0,443,445,7,
        7,0,0,444,443,1,0,0,0,445,446,1,0,0,0,446,444,1,0,0,0,446,447,1,
        0,0,0,447,448,1,0,0,0,448,449,6,46,0,0,449,94,1,0,0,0,450,451,7,
        8,0,0,451,96,1,0,0,0,452,453,9,0,0,0,453,454,1,0,0,0,454,455,6,48,
        0,0,455,98,1,0,0,0,10,0,379,401,409,415,423,429,434,440,446,1,6,
        0,0
    ]

class LALexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    DECLARE = 1
    REAL = 2
    INTEIRO = 3
    LITERAL = 4
    LEIA = 5
    ESCREVA = 6
    SE = 7
    ENTAO = 8
    SENAO = 9
    FIM_SE = 10
    FIM_ALGORITMO = 11
    FIM = 12
    CONSTANTE = 13
    TIPO = 14
    LOGICO = 15
    REGISTRO = 16
    FIM_REGISTRO = 17
    PROCEDIMENTO = 18
    VAR = 19
    FALSO = 20
    ENQUANTO = 21
    VERDADEIRO = 22
    FACA = 23
    ATE = 24
    FIM_ENQUANTO = 25
    FIM_PROCEDIMENTO = 26
    CASO = 27
    FIM_CASO = 28
    SEJA = 29
    PARA = 30
    FIM_PARA = 31
    FUNCAO = 32
    FIM_FUNCAO = 33
    RETORNE = 34
    E = 35
    OU = 36
    NAO = 37
    COMMENT = 38
    OP_ARITMETICOS = 39
    OP_RELACIONAIS = 40
    OP_MEMORIA = 41
    DELIMITADORES = 42
    CADEIA = 43
    NREAL = 44
    NINTEIRO = 45
    IDENTIFICADOR = 46
    WS = 47
    INVALID_CHAR = 48

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'declare'", "'real'", "'inteiro'", "'literal'", "'leia'", "'escreva'", 
            "'se'", "'entao'", "'senao'", "'fim_se'", "'fim_algoritmo'", 
            "'fim'", "'constante'", "'tipo'", "'logico'", "'registro'", 
            "'fim_registro'", "'procedimento'", "'var'", "'falso'", "'enquanto'", 
            "'verdadeiro'", "'faca'", "'ate'", "'fim_enquanto'", "'fim_procedimento'", 
            "'caso'", "'fim_caso'", "'seja'", "'para'", "'fim_para'", "'funcao'", 
            "'fim_funcao'", "'retorne'", "'e'", "'ou'", "'nao'" ]

    symbolicNames = [ "<INVALID>",
            "DECLARE", "REAL", "INTEIRO", "LITERAL", "LEIA", "ESCREVA", 
            "SE", "ENTAO", "SENAO", "FIM_SE", "FIM_ALGORITMO", "FIM", "CONSTANTE", 
            "TIPO", "LOGICO", "REGISTRO", "FIM_REGISTRO", "PROCEDIMENTO", 
            "VAR", "FALSO", "ENQUANTO", "VERDADEIRO", "FACA", "ATE", "FIM_ENQUANTO", 
            "FIM_PROCEDIMENTO", "CASO", "FIM_CASO", "SEJA", "PARA", "FIM_PARA", 
            "FUNCAO", "FIM_FUNCAO", "RETORNE", "E", "OU", "NAO", "COMMENT", 
            "OP_ARITMETICOS", "OP_RELACIONAIS", "OP_MEMORIA", "DELIMITADORES", 
            "CADEIA", "NREAL", "NINTEIRO", "IDENTIFICADOR", "WS", "INVALID_CHAR" ]

    ruleNames = [ "DECLARE", "REAL", "INTEIRO", "LITERAL", "LEIA", "ESCREVA", 
                  "SE", "ENTAO", "SENAO", "FIM_SE", "FIM_ALGORITMO", "FIM", 
                  "CONSTANTE", "TIPO", "LOGICO", "REGISTRO", "FIM_REGISTRO", 
                  "PROCEDIMENTO", "VAR", "FALSO", "ENQUANTO", "VERDADEIRO", 
                  "FACA", "ATE", "FIM_ENQUANTO", "FIM_PROCEDIMENTO", "CASO", 
                  "FIM_CASO", "SEJA", "PARA", "FIM_PARA", "FUNCAO", "FIM_FUNCAO", 
                  "RETORNE", "E", "OU", "NAO", "COMMENT", "OP_ARITMETICOS", 
                  "OP_RELACIONAIS", "OP_MEMORIA", "DELIMITADORES", "CADEIA", 
                  "NREAL", "NINTEIRO", "IDENTIFICADOR", "WS", "DIGITO", 
                  "INVALID_CHAR" ]

    grammarFileName = "LALexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


